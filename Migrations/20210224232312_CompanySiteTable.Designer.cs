// <auto-generated />
using System;
using CoreRoutes.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreRoutes.Migrations
{
    [DbContext(typeof(RoutesDBContext))]
    [Migration("20210224232312_CompanySiteTable")]
    partial class CompanySiteTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreRoutes.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CentralAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CoreRoutes.Models.CompanySite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyFK")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyFK");

                    b.ToTable("CompanySites");
                });

            modelBuilder.Entity("CoreRoutes.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2021, 2, 24, 17, 23, 12, 231, DateTimeKind.Local).AddTicks(8137),
                            UpdateAt = new DateTime(2021, 2, 24, 17, 23, 12, 232, DateTimeKind.Local).AddTicks(5908),
                            UserRole = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2021, 2, 24, 17, 23, 12, 232, DateTimeKind.Local).AddTicks(6204),
                            UpdateAt = new DateTime(2021, 2, 24, 17, 23, 12, 232, DateTimeKind.Local).AddTicks(6209),
                            UserRole = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2021, 2, 24, 17, 23, 12, 232, DateTimeKind.Local).AddTicks(6211),
                            UpdateAt = new DateTime(2021, 2, 24, 17, 23, 12, 232, DateTimeKind.Local).AddTicks(6212),
                            UserRole = "Driver"
                        });
                });

            modelBuilder.Entity("CoreRoutes.Models.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");
                });

            modelBuilder.Entity("CoreRoutes.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleFK");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2021, 2, 24, 17, 23, 12, 261, DateTimeKind.Local).AddTicks(8153),
                            Email = "eretana60@gmail.com",
                            Password = "$2a$06$pE72w8/e44pwim0EQRy3cuXeivLDX4trxrEtqyyRmdmmnXPYVTdm2",
                            RoleFK = 1,
                            UpdateAt = new DateTime(2021, 2, 24, 17, 23, 12, 261, DateTimeKind.Local).AddTicks(8453),
                            Username = "eretana"
                        });
                });

            modelBuilder.Entity("CoreRoutes.Models.Weekday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weekdays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayName = "Monday"
                        },
                        new
                        {
                            Id = 2,
                            DayName = "Tuesday"
                        },
                        new
                        {
                            Id = 3,
                            DayName = "Wednesday"
                        },
                        new
                        {
                            Id = 4,
                            DayName = "Thursday"
                        },
                        new
                        {
                            Id = 5,
                            DayName = "Friday"
                        },
                        new
                        {
                            Id = 6,
                            DayName = "Saturday"
                        },
                        new
                        {
                            Id = 7,
                            DayName = "Sunday"
                        });
                });

            modelBuilder.Entity("CoreRoutes.Models.CompanySite", b =>
                {
                    b.HasOne("CoreRoutes.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CoreRoutes.Models.User", b =>
                {
                    b.HasOne("CoreRoutes.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
